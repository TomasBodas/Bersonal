@model UAIDesarrolloArquitectura.Models.ViewModel.PerfilesUsuariosViewModel
<!DOCTYPE html>

<html>
@{
    ViewBag.Title = "AsignarPerfil";
    Services.Idioma.Translator translator = new Services.Idioma.Translator();
    UAIDesarrolloArquitectura.Controllers.IdiomaController lC = new UAIDesarrolloArquitectura.Controllers.IdiomaController();
    lC.InitializeController();
    Services.LanguageService service = lC.GetService();
    service.Susbcribe(translator);
    if (Services.SessionManager.IsLogged())
    {
        service.ChangeLanguage((Services.SessionManager.GetInstance.User.LanguageId).ToString());
    }
    else
    {
        if (!service.SelectedLanguageExists()) { service.ChangeLanguage("1"); }
    }
}
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Asignar Perfiles</title>
    <link rel="stylesheet" href="~/Content/Site.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Chivo:ital,wght@0,100..900;1,100..900&display=swap" rel="stylesheet">
    <style>
        .container {
            display: flex;
            flex-direction: column;
            align-items: center;
            gap: 20px;
        }

        .list-container {
            display: flex;
            gap: 20px; /* Espacio entre las dos listas */
        }

        .list-box {
            width: 200px;
            background-color: #ffffff;
            border: 1px solid #ddd;
            border-radius: 5px;
            padding: 15px;
        }

        h3 {
            text-align: center;
            color: #333;
            margin-bottom: 10px;
        }

        .lista {
            list-style-type: none;
        }

            .lista li {
                padding: 10px;
                border-bottom: 1px solid #ddd;
                cursor: pointer;
                text-align: center;
            }

                .lista li:hover {
                    background-color: #f0f0f0;
                }

                .lista li.selected {
                    background-color: #007bff;
                    color: white;
                    font-weight: bold;
                }

                .lista li:last-child {
                    border-bottom: none;
                }

        .button-container {
            text-align: center;
        }

        button {
            padding: 10px 20px;
            background-color: #007bff;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 16px;
        }

            button:hover {
                background-color: #0056b3;
            }
    </style>
</head>
<body>
    <nav class="barra">
        @if (Services.SessionManager.IsLogged())
        {
            <div class="opciones">
                <a href="@Url.Action("Logout", "Home")">@translator.GetTraduction(service, "Logout")</a>
                <a href="@Url.Action("Index", "Home")">@translator.GetTraduction(service, "Main")</a>
                <a style="display:none;" id="bitacora" href="@Url.Action("Bitacora", "Bitacora")">@translator.GetTraduction(service, "Log")</a>
                <a style="display:none;" id="abmusuarios" href="#">@translator.GetTraduction(service, "ManageUser")</a>
                <a style="display:none;" id="restore" href="@Url.Action("BackupRestore", "Backup")">@translator.GetTraduction(service, "Restoredb")</a>
                <a style="display:none;" id="1001" href="@Url.Action("ABMIdioma", "Idioma")">@translator.GetTraduction(service, "ManageLanguage")</a>
                <a style="display:none;" id="crearperfiles" href="@Url.Action("CrearPerfiles", "CrearPerfiles")">@translator.GetTraduction(service, "CreateProfile")</a>
                <a href="#">@translator.GetTraduction(service, "AssignProfile")</a>
                <script type="text/javascript">
             @foreach (string permission in Services.SessionManager.GetInstance.User.permissionList)
             {
                 <text>
                     document.getElementById('@permission').style.display = 'block';
                 </text>
             }
                </script>
                <a href="@Url.Action("Carrito", "Carrito")">@translator.GetTraduction(service, "Cart")</a>
            </div>
            <div class="opciones">
                <img src="~/assets/user-image-with-black-background-svgrepo-com.svg" width="30px" />
                <p style='color: black; white-space: nowrap;'>@translator.GetTraduction(service, "Welcome"), @Services.SessionManager.GetInstance.User.Name</p>
            </div>
        }
        else
        {
            <a href="@Url.Action("Login", "Login")">@translator.GetTraduction(service, "Login")</a>
        }
        <form>
            <select id="option" onchange="enviarValor()">
                @foreach (Services.Idioma.Language l in service.GetLanguages())
                {

                    if (service.SelectedLanguage.Id == l.Id)
                    {
                        <option value="@l.Id" selected="selected">@translator.GetTraduction(service, l.Name)</option>
                    }

                    else
                    {
                        <option value="@l.Id">@translator.GetTraduction(service, l.Name)</option>
                    }
                }
            </select>
        </form>
    </nav>
    <header>
        <h1>Bersonal</h1>
    </header>
    <nav>
        <a @Url.Action("Index", "Home")>Internet</a>
        <a href="https://es.euronews.com/noticias/internacional">@translator.GetTraduction(service, "Store")</a>
        <a href="https://es.euronews.com/business">@translator.GetTraduction(service, "Portability")</a>
        <a href="@Url.Action("Plans", "Home")">@translator.GetTraduction(service, "Plans")</a>
        <a href="https://es.euronews.com/green">TV</a>
    </nav>
    <div class="container">
        <div class="list-container">
            <div class="list-box">
                <h3>@translator.GetTraduction(service, "Profiles")</h3>
                <ul id="listaPerfiles" class="lista">
                    @foreach (var profile in Model.Perfiles)
                    {
                        <li>@profile</li>
                    }
                </ul>
            </div>
            <div class="list-box">
                <h3>@translator.GetTraduction(service, "Users")</h3>
                <ul id="listaUsuarios" class="lista">
                    @foreach (var user in Model.Usuarios)
                    {
                        <li>@user.Name</li>
                    }
                </ul>
            </div>
        </div>

        <div class="button-container">
            <button id="btnAsignarPerfil">@translator.GetTraduction(service, "AssignProfile2")</button>
        </div>
    </div>
    <script>
        document.getElementById('btnAsignarPerfil').addEventListener('click', () => {
            const perfilSeleccionado = document.querySelector('#listaPerfiles .selected');
            const usuarioSeleccionado = document.querySelector('#listaUsuarios .selected');

            if (perfilSeleccionado && usuarioSeleccionado) {
                // Preparar los datos para enviar al servidor
                const datos = {
                    perfil: perfilSeleccionado.textContent,
                    usuario: usuarioSeleccionado.textContent
                };

                // Enviar los datos al servidor usando fetch
                fetch('/AsignarPerfil/AsignarPerfilUsuario', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(datos)
                })
                    .then(response => {
                        if (!response.ok) {
                            throw new Error("Error en la respuesta del servidor");
                        }
                        return response.json();
                    })
                    .then(data => {
                        if (data.success) {
                            alert("Perfil asignado con éxito.");
                        } else {
                            alert("Hubo un problema al asignar el perfil.");
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        alert("Ocurrió un error al intentar asignar el perfil.");
                    });
            } else {
                alert("Por favor, selecciona un perfil y un usuario.");
            }
        });

        // Añade eventos de selección para cada elemento de las listas
        document.querySelectorAll('.lista li').forEach(item => {
            item.addEventListener('click', () => {
                // Deselecciona los elementos previamente seleccionados en la lista correspondiente
                item.parentElement.querySelectorAll('.selected').forEach(el => el.classList.remove('selected'));
                // Selecciona el elemento actual
                item.classList.add('selected');
            });
        });

    </script>
    <script src="~/Scripts/scriptIdioma.js"></script>
</body>
</html>
